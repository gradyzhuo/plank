# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python Wheel Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build_wheel:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build
        
      - name: Configure Git
        run: |
          git config --global user.email "gradyzhuo@ospark.org"
          git config --global user.name "Grady Zhuo"

      - name: Release
        id: release
        uses: dev-build-deploy/release-me@v0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prefix: v                    # OPTIONAL; prefixes the version with v (e.g. v1.0.0)
          config: .github/release.yml  # OPTIONAL; path to a Release configuration
          versioning: semver           # OPTIONAL; either `semver` or `calver`
          files: |                     # OPTIONAL; multiline list of local files names to upload as GitHub Release assets
            dist/*.whl

      - if: ${{ steps.release.outputs.created }}
        run: echo ${{ fromJSON(steps.release.outputs.release).tag_name }}
